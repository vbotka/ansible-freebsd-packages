---

# INSTALL

- name: "packages: Install all lists from pkg_dict"
  block:
    - name: "packages: Debug all lists from pkg_dict"
      ansible.builtin.debug:
        var: item.packages
      loop: "{{ pkg_dict }}"
      loop_control:
        label: "{{ item.pkglist }}"
      when: pkg_debug|bool
    - name: "packages: Install all lists from pkg_dict"
      community.general.pkgng:
        name: "{{ item.packages }}"
        autoremove: "{{ pkg_autoremove|default(omit) }}"
        cached: "{{ pkg_cached|default(omit) }}"
        chroot: "{{ pkg_chroot|default(omit) }}"
        jail: "{{ pkg_jail|default(omit) }}"
        pkgsite: "{{ pkg_pkgsite|default(omit) }}"
        rootdir: "{{ pkg_rootdir|default(omit) }}"
      loop: "{{ pkg_dict }}"
      loop_control:
        label: "{{ item.pkglist }}"
      register: result
      retries: "{{ freebsd_install_retries }}"
      until: result is succeeded
      delay: "{{ freebsd_install_delay }}"
      when: not pkg_dryrun|bool
    - name: "packages: Debug result"
      ansible.builtin.debug:
        var: result
      when: pkg_debug|bool
  when:
    - pkg_dict_all|bool
    - not pkg_install_individually|bool

- name: "packages: Install individually from all lists in pkg_dict"
  block:
    - name: "packages: Debug individually from all lists in pkg_dict"
      ansible.builtin.debug:
        msg: "{{ item.0.pkglist }}: {{ item.1 }}"
      loop: "{{ query('subelements', pkg_dict, 'packages') }}"
      loop_control:
        label: "{{ item.0.pkglist }}: {{ item.1 }}"
      when: pkg_debug|bool
    - name: "packages: Install individually from all lists in pkg_dict"
      community.general.pkgng:
        name: "{{ item.1 }}"
        autoremove: "{{ pkg_autoremove|default(omit) }}"
        cached: "{{ pkg_cached|default(omit) }}"
        chroot: "{{ pkg_chroot|default(omit) }}"
        jail: "{{ pkg_jail|default(omit) }}"
        pkgsite: "{{ pkg_pkgsite|default(omit) }}"
        rootdir: "{{ pkg_rootdir|default(omit) }}"
      loop: "{{ query('subelements', pkg_dict, 'packages') }}"
      loop_control:
        label: "{{ item.0.pkglist }}: {{ item.1 }}"
      register: result
      retries: "{{ freebsd_install_retries }}"
      until: result is succeeded
      delay: "{{ freebsd_install_delay }}"
      when: not pkg_dryrun|bool
    - name: "packages: Debug result"
      ansible.builtin.debug:
        var: result
      when: pkg_debug|bool
  when:
    - pkg_dict_all|bool
    - pkg_install_individually|bool

- name: "packages: Install selected lists from pkg_dict"
  block:
    - name: "packages: Debug selected lists from pkg_dict"
      ansible.builtin.debug:
        var: item.packages
      loop: "{{ pkg_dict }}"
      loop_control:
        label: "{{ item.pkglist }}"
      when:
        - pkg_debug|bool
        - item.pkglist in pkg_dict_select
    - name: "packages: Install selected lists from pkg_dict"
      community.general.pkgng:
        name: "{{ item.packages }}"
        autoremove: "{{ pkg_autoremove|default(omit) }}"
        cached: "{{ pkg_cached|default(omit) }}"
        chroot: "{{ pkg_chroot|default(omit) }}"
        jail: "{{ pkg_jail|default(omit) }}"
        pkgsite: "{{ pkg_pkgsite|default(omit) }}"
        rootdir: "{{ pkg_rootdir|default(omit) }}"
      loop: "{{ pkg_dict }}"
      loop_control:
        label: "{{ item.pkglist }}"
      register: result
      retries: "{{ freebsd_install_retries }}"
      until: result is succeeded
      delay: "{{ freebsd_install_delay }}"
      when:
        - not pkg_dryrun|bool
        - item.pkglist in pkg_dict_select
    - name: "packages: Debug result"
      ansible.builtin.debug:
        var: result
      when: pkg_debug|bool
  when:
    - pkg_dict_select|length > 0
    - not pkg_install_individually|bool

- name: "packages: Install individually from selected lists in pkg_dict"
  block:
    - name: "packages: Debug individually from selected lists in pkg_dict"
      ansible.builtin.debug:
        msg: "{{ item.0.pkglist }}: {{ item.1 }}"
      loop: "{{ query('subelements', pkg_dict, 'packages') }}"
      loop_control:
        label: "{{ item.0.pkglist }}: {{ item.1 }}"
      when:
        - pkg_debug|bool
        - item.0.pkglist in pkg_dict_select
    - name: "packages: Install individually from selected lists in pkg_dict"
      community.general.pkgng:
        name: "{{ item.1 }}"
        autoremove: "{{ pkg_autoremove|default(omit) }}"
        cached: "{{ pkg_cached|default(omit) }}"
        chroot: "{{ pkg_chroot|default(omit) }}"
        jail: "{{ pkg_jail|default(omit) }}"
        pkgsite: "{{ pkg_pkgsite|default(omit) }}"
        rootdir: "{{ pkg_rootdir|default(omit) }}"
      loop: "{{ query('subelements', pkg_dict, 'packages') }}"
      loop_control:
        label: "{{ item.0.pkglist }}: {{ item.1 }}"
      register: result
      retries: "{{ freebsd_install_retries }}"
      until: result is succeeded
      delay: "{{ freebsd_install_delay }}"
      when:
        - not pkg_dryrun|bool
        - item.0.pkglist in pkg_dict_select
    - name: "packages: Debug result"
      ansible.builtin.debug:
        var: result
      when: pkg_debug|bool
  when:
    - pkg_dict_select|length > 0
    - pkg_install_individually|bool

- name: "packages: Install list pkg_list"
  block:
    - name: "packages: Debug list pkg_list"
      ansible.builtin.debug:
        var: pkg_list
      when: pkg_debug|bool
    - name: "packages: Install list pkg_list"
      community.general.pkgng:
        name: "{{ pkg_list }}"
        autoremove: "{{ pkg_autoremove }}"
        cached: "{{ pkg_cached }}"
        chroot: "{{ pkg_chroot|default(omit) }}"
        jail: "{{ pkg_jail|default(omit) }}"
        pkgsite: "{{ pkg_site|default(omit) }}"
        rootdir: "{{ pkg_rootdir|default(omit) }}"
      register: result
      retries: "{{ freebsd_install_retries }}"
      until: result is succeeded
      delay: "{{ freebsd_install_delay }}"
      when: not pkg_dryrun|bool
    - name: "packages: Debug result"
      ansible.builtin.debug:
        var: result
      when: pkg_debug|bool
  when:
    - pkg_list|length > 0
    - not pkg_install_individually|bool

- name: "packages: Install individually from list pkg_list"
  block:
    - name: "packages: Debug individually from list pkg_list"
      ansible.builtin.debug:
        var: item
      loop: "{{ pkg_list }}"
      when: pkg_debug|bool
    - name: "packages: Install individually from list pkg_list"
      community.general.pkgng:
        name: "{{ item }}"
        autoremove: "{{ pkg_autoremove }}"
        cached: "{{ pkg_cached }}"
        chroot: "{{ pkg_chroot|default(omit) }}"
        jail: "{{ pkg_jail|default(omit) }}"
        pkgsite: "{{ pkg_site|default(omit) }}"
        rootdir: "{{ pkg_rootdir|default(omit) }}"
      loop: "{{ pkg_list }}"
      register: result
      retries: "{{ freebsd_install_retries }}"
      until: result is succeeded
      delay: "{{ freebsd_install_delay }}"
      when: not pkg_dryrun|bool
    - name: "packages: Debug result"
      ansible.builtin.debug:
        var: result
      when: pkg_debug|bool
  when:
    - pkg_list|length > 0
    - pkg_install_individually|bool

# DEINSTALL

- name: "packages: Deinstall list pkg_list_deinstall"
  block:
    - name: "packages: Debug list pkg_list_deinstall"
      ansible.builtin.debug:
        var: pkg_list_deinstall
      when: pkg_debug|bool
    - name: "packages: Deinstall list pkg_list_deinstall"
      community.general.pkgng:
        name: "{{ pkg_list_deinstall }}"
        autoremove: "{{ pkg_autoremove }}"
        cached: "{{ pkg_cached }}"
        chroot: "{{ pkg_chroot|default(omit) }}"
        jail: "{{ pkg_jail|default(omit) }}"
        pkgsite: "{{ pkg_site|default(omit) }}"
        rootdir: "{{ pkg_rootdir|default(omit) }}"
      register: result
      retries: "{{ freebsd_install_retries }}"
      until: result is succeeded
      delay: "{{ freebsd_install_delay }}"
      when: not pkg_dryrun|bool
    - name: "packages: Debug result"
      ansible.builtin.debug:
        var: result
      when: pkg_debug|bool
  when:
    - pkg_list_deinstall|length > 0
    - not pkg_install_individually|bool

- name: "packages: Deinstall individually from list pkg_list_deinstall"
  block:
    - name: "packages: Debug individually from list pkg_list_deinstall"
      ansible.builtin.debug:
        msg: "{{ item }}"
      loop: "{{ pkg_list_deinstall }}"
      when: pkg_debug|bool
    - name: "packages: Deinstall individually from list pkg_list_deinstall"
      community.general.pkgng:
        name: "{{ item }}"
        autoremove: "{{ pkg_autoremove }}"
        cached: "{{ pkg_cached }}"
        chroot: "{{ pkg_chroot|default(omit) }}"
        jail: "{{ pkg_jail|default(omit) }}"
        pkgsite: "{{ pkg_site|default(omit) }}"
        rootdir: "{{ pkg_rootdir|default(omit) }}"
      loop: "{{ pkg_list_deinstall }}"
      register: result
      retries: "{{ freebsd_install_retries }}"
      until: result is succeeded
      delay: "{{ freebsd_install_delay }}"
      when: not pkg_dryrun|bool
    - name: "packages: Debug result"
      ansible.builtin.debug:
        var: result
      when: pkg_debug|bool
  when:
    - pkg_list_deinstall|length > 0
    - pkg_install_individually|bool

# TODO
#
# * Implement pkgng annotation

# EOF
...
