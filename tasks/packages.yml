---

# INSTALL

# Install individualy from dictionary - - - - - - - - - - - - - - - - - - - - - - - - - -
- name: "packages: Debug list packages individualy from lists in the dictionary"
  debug:
    msg: "{{ item.0 }}: {{ item.1 }}"
  loop: "{{ lookup('subelements', pkg_dict, 'packages') }}"
  when:
    - pkg_debug|bool
    - pkg_install_individually|bool

- name: "packages: Install packages individualy from lists in the dictionary"
  pkgng:
    name: "{{ item.1 }}"
    autoremove: "{{ pkg_autoremove | default(omit) }}"
    cached: "{{ pkg_cached|default(omit) }}"
    chroot: "{{ pkg_chroot|default(omit) }}"
    jail: "{{ pkg_jail|default(omit) }}"
    pkgsite: "{{ pkg_pkgsite|default(omit) }}"
    rootdir: "{{ pkg_rootdir|default(omit) }}"
  loop: "{{ lookup('subelements', pkg_dict, 'packages') }}"
  register: result
  retries: "{{ freebsd_install_retries }}"
  until: result is succeeded
  delay: "{{ freebsd_install_delay }}"
  when:
    - pkg_install_individually|bool
    - not pkg_dryrun|bool

# Install lists from dictionary - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
- name: "packages: Debug lists of packages from the dictionary"
  debug:
    msg: "{{ item }}"
  loop: "{{ pkg_dict|json_query('[].packages') }}"
  when:
    - pkg_debug|bool
    - not pkg_install_individually|bool

- name: "packages: Install lists of packages from the dictionary"
  pkgng:
    name: "{{ item }}"
    autoremove: "{{ pkg_autoremove|default(omit) }}"
    cached: "{{ pkg_cached|default(omit) }}"
    chroot: "{{ pkg_chroot|default(omit) }}"
    jail: "{{ pkg_jail|default(omit) }}"
    pkgsite: "{{ pkg_pkgsite|default(omit) }}"
    rootdir: "{{ pkg_rootdir|default(omit) }}"
  loop: "{{ pkg_dict|json_query('[].packages') }}"
  register: result
  retries: "{{ freebsd_install_retries }}"
  until: result is succeeded
  delay: "{{ freebsd_install_delay }}"
  when:
    - not pkg_install_individually|bool
    - not pkg_dryrun|bool

# Install individualy from list - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
- name: "packages: Install packages individualy from the list"
  pkgng:
    name: "{{ item }}"
    autoremove: "{{ pkg_autoremove }}"
    cached: "{{ pkg_cached }}"
    chroot: "{{ pkg_chroot|default(omit) }}"
    jail: "{{ pkg_jail|default(omit) }}"
    pkgsite: "{{ pkg_site|default(omit) }}"
    rootdir: "{{ pkg_rootdir|default(omit) }}"
  loop: "{{ pkg_list }}"
  register: result
  retries: "{{ freebsd_install_retries }}"
  until: result is succeeded
  delay: "{{ freebsd_install_delay }}"
  when:
    - pkg_install_individually|bool
    - not pkg_dryrun|bool

# Install list - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
- name: "packages: Install list of packages"
  pkgng:
    name: "{{ pkg_list }}"
    autoremove: "{{ pkg_autoremove }}"
    cached: "{{ pkg_cached }}"
    chroot: "{{ pkg_chroot|default(omit) }}"
    jail: "{{ pkg_jail|default(omit) }}"
    pkgsite: "{{ pkg_site|default(omit) }}"
    rootdir: "{{ pkg_rootdir|default(omit) }}"
  register: result
  retries: "{{ freebsd_install_retries }}"
  until: result is succeeded
  delay: "{{ freebsd_install_delay }}"
  when:
    - not pkg_install_individually|bool
    - not pkg_dryrun|bool
    - pkg_list|length > 0

# DEINSTALL

# Deinstall individually from list - - - - - - - - - - - - - - - - - - - - - - - - - - - -
- name: "packages: Deinstall packages individually from the list"
  pkgng:
    state: absent
    name: "{{ item }}"
    autoremove: "{{ pkg_autoremove }}"
    cached: "{{ pkg_cached }}"
    chroot: "{{ pkg_chroot|default(omit) }}"
    jail: "{{ pkg_jail|default(omit) }}"
    pkgsite: "{{ pkg_site|default(omit) }}"
    rootdir: "{{ pkg_rootdir|default(omit) }}"
  loop: "{{ pkg_list_deinstall }}"
  register: result
  retries: "{{ freebsd_install_retries }}"
  until: result is succeeded
  delay: "{{ freebsd_install_delay }}"
  when:
    - pkg_install_individually|bool
    - not pkg_dryrun|bool

# Deinstall list - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
- name: "packages: Deinstall list of packages"
  pkgng:
    state: absent
    name: "{{ pkg_list_deinstall }}"
    autoremove: "{{ pkg_autoremove }}"
    cached: "{{ pkg_cached }}"
    chroot: "{{ pkg_chroot|default(omit) }}"
    jail: "{{ pkg_jail|default(omit) }}"
    pkgsite: "{{ pkg_site|default(omit) }}"
    rootdir: "{{ pkg_rootdir|default(omit) }}"
  register: result
  retries: "{{ freebsd_install_retries }}"
  until: result is succeeded
  delay: "{{ freebsd_install_delay }}"
  when:
    - not pkg_install_individually|bool
    - not pkg_dryrun|bool

# TODO - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# * Implement pkgng annotation
# * Loop_control label

# EOF
...
