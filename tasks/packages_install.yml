---
- name: "Packages_install: Fail if pkg_state not in [present, latest]"
  ansible.builtin.assert:
    that: pkg_state|d('present') in ['present', 'latest']
    fail_msg: "[ERR] Can not install package(s) if pkg_state={{ pkg_state | d('present') }}"
    quiet: true
  tags:
    - pkg_packages_install_all
    - pkg_packages_install_all_indivindually
    - pkg_packages_install_selected
    - pkg_packages_install_selected_indivindually
    - pkg_packages_install_list
    - pkg_packages_install_list_indivindually

- name: "Packages_install: Install all lists from pkg_dict"
  when:
    - pkg_dict_all|bool
    - not pkg_install_individually|bool
  tags: pkg_packages_install_all

  block:
    - name: "Packages_install: Debug all lists from pkg_dict"
      ansible.builtin.debug:
        var: item.packages
      loop: "{{ pkg_dict }}"
      loop_control:
        label: "{{ item.pkglist }}"
      when: pkg_debug|bool

    - name: "Packages_install: Install all lists from pkg_dict"
      community.general.pkgng:
        name: "{{ item.packages }}"
      loop: "{{ pkg_dict }}"
      loop_control:
        label: "{{ item.pkglist }}"
      register: result
      retries: "{{ freebsd_install_retries }}"
      until: result is succeeded
      delay: "{{ freebsd_install_delay }}"
      when: not pkg_dryrun|bool

    - name: "Packages_install: Debug result"
      ansible.builtin.debug:
        var: result
      when: pkg_debug|bool

- name: "Packages_install: Install individually from all lists in pkg_dict"
  when:
    - pkg_dict_all|bool
    - pkg_install_individually|bool
  tags: pkg_packages_install_all_indivindually

  block:
    - name: "Packages_install: Debug individually from all lists in pkg_dict"
      ansible.builtin.debug:
        msg: "{{ item.0.pkglist }}: {{ item.1 }}"
      loop: "{{ pkg_dict|subelements('packages') }}"
      loop_control:
        label: "{{ item.0.pkglist }}: {{ item.1 }}"
      when: pkg_debug|bool

    - name: "Packages_install: Install individually from all lists in pkg_dict"
      community.general.pkgng:
        name: "{{ item.1 }}"
      loop: "{{ pkg_dict|subelements('packages') }}"
      loop_control:
        label: "{{ item.0.pkglist }}: {{ item.1 }}"
      register: result
      retries: "{{ freebsd_install_retries }}"
      until: result is succeeded
      delay: "{{ freebsd_install_delay }}"
      when: not pkg_dryrun|bool

    - name: "Packages_install: Debug result"
      ansible.builtin.debug:
        var: result
      when: pkg_debug|bool

- name: "Packages_install: Install selected lists from pkg_dict"
  when:
    - pkg_dict_select|length > 0
    - not pkg_install_individually|bool
  tags: pkg_packages_install_selected

  block:
    - name: "Packages_install: Debug selected lists from pkg_dict"
      ansible.builtin.debug:
        var: item.packages
      loop: "{{ pkg_dict|selectattr('pkglist', 'in', pkg_dict_select) }}"
      loop_control:
        label: "{{ item.pkglist }}"
      when: pkg_debug|bool

    - name: "Packages_install: Install selected lists from pkg_dict"
      community.general.pkgng:
        name: "{{ item.packages }}"
      loop: "{{ pkg_dict|selectattr('pkglist', 'in', pkg_dict_select) }}"
      loop_control:
        label: "{{ item.pkglist }}"
      register: result
      retries: "{{ freebsd_install_retries }}"
      until: result is succeeded
      delay: "{{ freebsd_install_delay }}"
      when: not pkg_dryrun|bool

    - name: "Packages_install: Debug result"
      ansible.builtin.debug:
        var: result
      when: pkg_debug|bool

- name: "Packages_install: Install individually from selected lists in pkg_dict"
  when:
    - pkg_dict_select|length > 0
    - pkg_install_individually|bool
  tags: pkg_packages_install_selected_indivindually

  block:
    - name: "Packages_install: Debug individually from selected lists in pkg_dict"
      ansible.builtin.debug:
        msg: "{{ item.0.pkglist }}: {{ item.1 }}"
      loop: "{{ pkg_dict|selectattr('pkglist', 'in', pkg_dict_select)| subelements('packages') }}"
      loop_control:
        label: "{{ item.0.pkglist }}: {{ item.1 }}"
      when: pkg_debug|bool

    - name: "Packages_install: Install individually from selected lists in pkg_dict"
      community.general.pkgng:
        name: "{{ item.1 }}"
      loop: "{{ pkg_dict|selectattr('pkglist', 'in', pkg_dict_select)| subelements('packages') }}"
      loop_control:
        label: "{{ item.0.pkglist }}: {{ item.1 }}"
      register: result
      retries: "{{ freebsd_install_retries }}"
      until: result is succeeded
      delay: "{{ freebsd_install_delay }}"
      when: not pkg_dryrun|bool

    - name: "Packages_install: Debug result"
      ansible.builtin.debug:
        var: result
      when: pkg_debug|bool

- name: "Packages_install: Install list pkg_list"
  when:
    - pkg_list|length > 0
    - not pkg_install_individually|bool
  tags: pkg_packages_install_list

  block:
    - name: "Packages_install: Debug list pkg_list"
      ansible.builtin.debug:
        var: pkg_list
      when: pkg_debug|bool

    - name: "Packages_install: Install list pkg_list"
      community.general.pkgng:
        name: "{{ pkg_list }}"
      register: result
      retries: "{{ freebsd_install_retries }}"
      until: result is succeeded
      delay: "{{ freebsd_install_delay }}"
      when: not pkg_dryrun|bool

    - name: "Packages_install: Debug result"
      ansible.builtin.debug:
        var: result
      when: pkg_debug|bool

- name: "Packages_install: Install individually from list pkg_list"
  when:
    - pkg_list|length > 0
    - pkg_install_individually|bool
  tags: pkg_packages_install_list_indivindually

  # EOF
  block:
    - name: "Packages_install: Debug individually from list pkg_list"
      ansible.builtin.debug:
        var: item
      loop: "{{ pkg_list }}"
      when: pkg_debug|bool

    - name: "Packages_install: Install individually from list pkg_list"
      community.general.pkgng:
        name: "{{ item }}"
      loop: "{{ pkg_list }}"
      register: result
      retries: "{{ freebsd_install_retries }}"
      until: result is succeeded
      delay: "{{ freebsd_install_delay }}"
      when: not pkg_dryrun|bool

    - name: "Packages_install: Debug result"
      ansible.builtin.debug:
        var: result
      when: pkg_debug|bool
