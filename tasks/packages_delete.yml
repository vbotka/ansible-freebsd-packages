---
- name: "Packages_delete: Fail if pkg_state not equal absent"
  ansible.builtin.assert:
    that: pkg_state == 'absent'
    fail_msg: "[ERR] Can not delete package(s) if pkg_state={{ pkg_state }}"
    quiet: true
  tags:
    - pkg_packages_delete_list
    - pkg_packages_delete_list_indivindually

- name: Deinstall list pkg_list_deinstall
  when:
    - pkg_list_deinstall | length > 0
    - not pkg_install_individually | bool
  tags: pkg_packages_delete_list
  block:

    - name: "Packages_delete: Debug list pkg_list_deinstall pkg_debug={{ pkg_debug }}"
      ansible.builtin.debug:
        var: pkg_list_deinstall
      when: pkg_debug | bool

    - name: "Packages_delete: Deinstall list pkg_list_deinstall"
      community.general.pkgng:
        name: "{{ pkg_list_deinstall }}"
      register: result
      retries: "{{ freebsd_install_retries }}"
      until: result is succeeded
      delay: "{{ freebsd_install_delay }}"
      when: not pkg_dryrun | bool

    - name: "Packages_delete: Debug result pkg_debug={{ pkg_debug }}"
      ansible.builtin.debug:
        var: result
      when: pkg_debug | bool

- name: Deinstall individually list pkg_list_deinstall
  when:
    - pkg_list_deinstall | length > 0
    - pkg_install_individually | bool
  tags: pkg_packages_delete_list_indivindually
  block:

    - name: "Packages_delete: Debug individually from list pkg_list_deinstall pkg_debug={{ pkg_debug }}"
      ansible.builtin.debug:
        msg: "{{ item }}"
      loop: "{{ pkg_list_deinstall }}"
      when: pkg_debug | bool

    - name: "Packages_delete: Deinstall individually from list pkg_list_deinstall"
      community.general.pkgng:
        name: "{{ item }}"
      loop: "{{ pkg_list_deinstall }}"
      register: result
      retries: "{{ freebsd_install_retries }}"
      until: result is succeeded
      delay: "{{ freebsd_install_delay }}"
      when: not pkg_dryrun | bool

    - name: "Packages_delete: Debug result pkg_debug={{ pkg_debug }}"
      ansible.builtin.debug:
        var: result
      when: pkg_debug | bool

# EOF
